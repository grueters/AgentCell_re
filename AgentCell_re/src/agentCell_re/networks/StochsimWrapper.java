/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.27
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */
package agentCell_re.networks;


public class StochsimWrapper {

	// Load the StochSim native library.
	// The name of the library under linux is libstochsim.so but the system
	// assumes the lib and the .so
	// Under windows, the library name is stochsim.dll and the .dll is assumed
	// by the OS
	static {
		System.loadLibrary("stochsim");
	}

	private long swigCPtr;

	protected boolean swigCMemOwn;

	protected StochsimWrapper(long cPtr, boolean cMemoryOwn) {
		swigCMemOwn = cMemoryOwn;
		swigCPtr = cPtr;
	}

	protected static long getCPtr(StochsimWrapper obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	protected void finalize() {
		delete();
	}

	public void delete() {
		if (swigCPtr != 0 && swigCMemOwn) {
			swigCMemOwn = false;
			StochsimWrapperMapper.destroy(swigCPtr);
		}
		swigCPtr = 0;
	}

	public StochsimWrapper(String arg0, int arg1) {
		this(StochsimWrapperMapper.create1(arg0, arg1), true);
	}

    public StochsimWrapper(String arg0, String arg1, int arg2) {
        this(StochsimWrapperMapper.create2(arg0, arg1, arg2), true);
    }

	public void finalise() {
		StochsimWrapperMapper.finalise(swigCPtr);
	}

	public void step(double arg0) {
		StochsimWrapperMapper.step(swigCPtr, arg0);
	}

	public double getTime() {
		return StochsimWrapperMapper.getTime(swigCPtr);
	}

    public double getTimeInc() {
        return StochsimWrapperMapper.getTimeInc(swigCPtr);
    }

	public int getCopynumber(String arg0) {
		// the getCopyNumber provided by StochSim did not work with
		// multi-complexes molecules. 
		// return StochsimWrapperMapper.getCopynumber(swigCPtr, arg0);
		//
		// Tom Shimizu wrote getOVValue which works for both simple 
		// and multistate complex types, but requires a conjugate 
		// output variable with the name specified by the "arg0" 
		// argument to be specified in the INI files
		return StochsimWrapperMapper.getOVValue(swigCPtr, arg0);
	}

	public void setDynamicValue(String arg0, double arg1) {
		StochsimWrapperMapper.setDynamicValue(swigCPtr, arg0, arg1);
	}

	public void ErrOut(String arg0, int nErrorCode) {
		StochsimWrapperMapper.ErrOut(swigCPtr, arg0, nErrorCode);
	}

	public void StatusOut(String arg0) {
		StochsimWrapperMapper.StatusOut(swigCPtr, arg0);
	}

}
